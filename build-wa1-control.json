{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create the Accenture Stack in WA1",

  "Parameters" : {

      "500Data":{
         "Description":"Size of attached EBS volumes (in GB)",
         "Type":"Number",
         "Default":500
      },

      "250Data":{
         "Description":"Size of attached EBS volumes (in GB)",
         "Type":"Number",
         "Default":250
      }

  },

  "Mappings" : {
    "AWSRegion2AZ" : {
      "eu-central-1" : { "1" : "eu-central-1b" },
      "us-east-1" : { "1" : "us-east-1b" },
      "ap-southeast-1" : { "1" : "ap-southeast-1a"  }
    },

    "AWSRegion2Ami" : {
      "ap-southeast-1" : { "AMI" : "ami-75e55616" },
      "eu-central-1" : { "AMI" : "ami-6715c108" },
      "us-east-1" : { "AMI" : "ami-ffce68e9" }
    }
  },

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.11.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture-WA1-VPC"
          }
        ]
      }
    },
    "InternetGateway" : {
       "Type" : "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture-WA1-IGW"
          }
        ]
      }
    },
    "ControlInternetRoute1" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : [ "InternetGateway", "ControlInternetRouteTable" ] ,
      "Properties" : {
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" },
        "RouteTableId" : { "Ref" : "ControlInternetRouteTable" }
      }
    },


    "ControlInternetRoute2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.16.0.0/24",
        "RouteTableId": {
          "Ref": "ControlInternetRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },


    "ControlInternetRoute3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.149.0.0/16",
        "RouteTableId": {
          "Ref": "ControlInternetRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },


    "ControlInternetRoute4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.165.0.0/16",
        "RouteTableId": {
          "Ref": "ControlInternetRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },













    "VPCGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
          "InternetGatewayId" : { "Ref" : "InternetGateway" },
          "VpcId" : { "Ref" : "VPC" }
       }
    },
    "ControlInternetRouteTable" : {
       "Type" : "AWS::EC2::RouteTable",
       "Properties" : {
          "VpcId" : { "Ref" : "VPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture-WA1-Control-RT"
          }
        ]

       }
    },


    "ControlSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "1" ] },
        "CidrBlock" : "10.11.1.0/24",
        "VpcId" : { "Ref" : "VPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture-WE1-Control-SN"
          }
        ]
      }
    },



    "AccentureDefaultSN": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture-SG"
          }
        ]
      }
    },



    "eipassoc1": {
        "Type": "AWS::EC2::EIPAssociation",
        "Properties": {
                "AllocationId": "eipalloc-746b994a",
                "InstanceId": {
                  "Ref": "BastionHost1"
                }
            }
        },

    "eipassoc2": {
        "Type": "AWS::EC2::EIPAssociation",
        "Properties": {
                "AllocationId": "eipalloc-db699be5",
                "InstanceId": {
                  "Ref": "WebProxy1"
                }
            }
        },

    "eipassoc3": {
        "Type": "AWS::EC2::EIPAssociation",
        "Properties": {
                "AllocationId": "eipalloc-cd478ff3",
                "InstanceId": {
                  "Ref": "VPNInternal1"
                }
            }
        },

    "eipassoc4": {
        "Type": "AWS::EC2::EIPAssociation",
        "Properties": {
                "AllocationId": "eipalloc-13859522",
                "InstanceId": {
                  "Ref": "SFTPHost1"
                }
            }
        },


    "NATHost1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : "ami-16bc1a00",
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture NAT Host WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ControlSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.1.4",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },

    "SFTPHost1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture SFTP Host WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ControlSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.1.253",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },


    "BastionHost1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture Bastion Host WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ControlSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.1.5",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },



    "WebProxy1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture Web Proxy WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ControlSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.1.7",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },



    "WebProxy2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture Web Proxy WA1 Server2"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ControlSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.1.8",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },

    "VPNInternal1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : "ami-bf4fe9a9",
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture VPN Server WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ControlSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.1.9",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },



    "Frontend1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.large",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture Frontend WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "AppSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.2.7",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },







    "API1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.2xlarge",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture API WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "AppSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.2.5",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },


    "API2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.2xlarge",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture API WA1 Server2"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "AppSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.2.6",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },

    "LB1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : "ami-cf85f6d9",
        "InstanceType": "r4.8xlarge",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture LB WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],

            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "VolumeType":"gp2",
                     "VolumeSize":{
                        "Ref":"500Data"
                     },
                     "DeleteOnTermination":true
                  }
               }
            ],

        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "DBSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.3.4",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },


    "LB2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : "ami-cf85f6d9",
        "InstanceType": "r4.8xlarge",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture LB WA1 Server2"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],

            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "VolumeType":"gp2",
                     "VolumeSize":{
                        "Ref":"500Data"
                     },
                     "DeleteOnTermination":true
                  }
               }
            ],

        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "DBSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.3.5",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },



    "Postgres1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.2xlarge",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture Postgres WA1 Server1"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],

            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "VolumeType":"gp2",
                     "VolumeSize":{
                        "Ref":"250Data"
                     },
                     "DeleteOnTermination":true
                  }
               }
            ],


        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "DBSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.3.6",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },


    "Postgres2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "EbsOptimized": "true",
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2Ami", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType": "m4.2xlarge",
        "KeyName": "accent-us",
        "Monitoring": "false",
        "SourceDestCheck" : "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Accenture Postgres WA1 Server2"
          },
          {
            "Key": "Use",
            "Value": "TEST"
          },
          {
            "Key": "Vertical",
            "Value": "Talent"
          },
          {
            "Key": "Client",
            "Value": "Accenture"
          },
          {
            "Key": "Required",
            "Value": "12x0"
          }
        ],

            "BlockDeviceMappings":[
               {
                  "DeviceName":"/dev/sda1",
                  "Ebs":{
                     "VolumeType":"gp2",
                     "VolumeSize":{
                        "Ref":"250Data"
                     },
                     "DeleteOnTermination":true
                  }
               }
            ],


        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "DBSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.11.3.7",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "AccentureDefaultSN"
              }
            ]
          }
        ]
      }
    },


    "AppSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "1" ] },
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.11.2.0/24",
        "Tags" : [
          {"Key" : "Name", "Value" : "Accenture-WA1-App-SN" },
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },


    "AppRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Name", "Value" : "Accenture-WA1-App-RT" },
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },


    "AppSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "AppSubnet" },
        "RouteTableId" : { "Ref" : "AppRouteTable" }
      }
    },

    "AppRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "AppRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATHost1" }
      }
    },

    "AppRoute2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.16.0.0/24",
        "RouteTableId": {
          "Ref": "AppRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },


    "AppNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },



    "DBSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AWSRegion2AZ", { "Ref" : "AWS::Region" }, "1" ] },
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.11.3.0/24",
        "Tags" : [
          {"Key" : "Name", "Value" : "Accenture-WA1-DB-SN" },
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "DBRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Name", "Value" : "Accenture-WA1-DB-RT" },
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },


    "DBSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "AppSubnet" },
        "RouteTableId" : { "Ref" : "DBRouteTable" }
      }
    },

    "DBRoute1" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "DBRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATHost1" }
      }
    },

    "DBRoute2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "172.16.0.0/24",
        "RouteTableId": {
          "Ref": "DBRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },

    "DBRoute3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.149.0.0/16",
        "RouteTableId": {
          "Ref": "DBRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },


    "DBRoute4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "10.165.0.0/16",
        "RouteTableId": {
          "Ref": "DBRouteTable"
        },
        "InstanceId": {
          "Ref": "VPNInternal1"
        }
      }
    },






    "DBNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Network", "Value" : "Private" }
        ]
      }
    },


    "ControlSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "ControlInternetRouteTable" },
        "SubnetId" : { "Ref" : "ControlSubnet" }
      }
    },
    "AppSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "AppRouteTable" },
        "SubnetId" : { "Ref" : "AppSubnet" }
      }
    },
    "DBSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "DBRouteTable" },
        "SubnetId" : { "Ref" : "DBSubnet" }
      }
    },

    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "213.120.94.146/32"
      }
    },


    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "5201",
        "ToPort": "5201",
        "CidrIp": "52.228.238.62/32"
      }
    },

    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "icmp",
        "FromPort": "8",
        "ToPort": "8",
        "CidrIp": "52.51.145.23/32"
      }
    },


    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "udp",
        "FromPort": "500",
        "ToPort": "500",
        "CidrIp": "52.50.212.132/32"
      }
    },


    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "udp",
        "FromPort": "4500",
        "ToPort": "4500",
        "CidrIp": "52.50.212.132/32"
      }
    },

    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "udp",
        "FromPort": "4500",
        "ToPort": "4500",
        "CidrIp": "52.50.212.132/32"
      }
    },

    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "5672",
        "ToPort": "5672",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },

    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },

    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "icmp",
        "FromPort": "8",
        "ToPort": "8",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },

    "ingress9": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },


    "ingress10": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },


    "ingress11": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "1515",
        "ToPort": "1515",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },


    "ingress12": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "53",
        "ToPort": "53",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },

    "ingress13": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "112",
        "ToPort": "112",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },


    "ingress14": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "213.120.94.146/32"
      }
    },


    "ingress15": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "213.120.94.146/32"
      }
    },

    "ingress16": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "-1",
        "FromPort": "0",
        "ToPort": "65535",
        "SourceSecurityGroupId": {
          "Ref": "AccentureDefaultSN"
        }
      }
    },

    "ingress17": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "52.71.57.180/32"
      }
    },


    "ingress18": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "52.0.51.57/32"
      }
    },


    "ingress19": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "52.0.141.103/32"
      }
    },

    "ingress20": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "5518",
        "ToPort": "5518",
        "CidrIp": "10.11.3.0/24"
      }
    },

    "ingress21": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "5518",
        "ToPort": "5518",
        "CidrIp": "10.149.3.0/24"
      }
    },

    "ingress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "5518",
        "ToPort": "5518",
        "CidrIp": "10.165.3.0/24"
      }
    },

    "ingress23": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.11.1.0/24"
      }
    },


    "ingress24": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.11.2.0/24"
      }
    },




    "ingress25": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "10.11.3.0/24"
      }
    },

    "ingress26": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "52.51.134.11/32"
      }
    },





    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AccentureDefaultSN"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },

  "Outputs" : {
  }
}
